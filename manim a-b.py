from manim import *
class Function(Scene):
    def construct(self):
        t_1 = MathTex(
            "(a+b)^{2} =a^{2}+2ab+b^{2}"
        )
        special_text = MathTex('?',font_size=60)
        self.play(Write(t_1))
        self.wait(0.5)
        special_text.shift(1*DOWN)
        self.play(Write(special_text))
        self.wait(1)
        self.play(Unwrite(t_1),Unwrite(special_text),run_time=1)
        self.wait(0.5)
        
        huge_square = Square().scale(3)
        self.play(Create(huge_square),rate_func=smooth)
        self.wait(0.5)

        cut_line_1=Line().scale(3)
        cut_line_2=Line().scale(3)
        cut_line_1.rotate(-90*DEGREES,IN)
        cut_line_1.shift(1.5*RIGHT)
        cut_line_2.shift(1.5*UP)
        self.play(Create(cut_line_1),Create(cut_line_2),rate_func=smooth)
        self.wait(0.5)

        square_a2 = Square(fill_color=BLUE,fill_opacity=0.5).scale(2.25)
        square_a2.shift(0.75*DOWN+0.75*LEFT)
        square_b2 = Square(fill_color=RED,fill_opacity=0.5).scale(0.75)
        square_b2.shift(2.25*UP+2.25*RIGHT)
        rect_ab_1 = Rectangle(height=1.5,width=4.5,fill_color=YELLOW,fill_opacity=0.5)
        rect_ab_1.shift(2.25*UP+0.75*LEFT)
        rect_ab_2 = rect_ab_1.copy()
        rect_ab_2.rotate(90*DEGREES,OUT)
        rect_ab_2.shift(3*RIGHT,3*DOWN)
        self.play(FadeIn(square_a2,square_b2,rect_ab_1,rect_ab_2),rate_func=smooth)
        self.wait(0.5)

        t_2 = MathTex("a^{2}",font_size=80)
        t_3 = MathTex("b^{2}",font_size=80)
        t_2.shift(0.75*DOWN+0.75*LEFT)
        t_3.shift(2.25*RIGHT+2.25*UP)
        self.play(Write(t_2),Write(t_3))
        self.wait(0.5)

        t_4 = MathTex("a",font_size=60)
        t_5 = t_4.copy()
        t_6 = MathTex("b",font_size=60)
        t_7 = t_6.copy()
        t_4.shift(0.75*DOWN+3.5*LEFT)
        t_5.shift(3.5*DOWN+0.75*LEFT)
        t_6.shift(3.5*RIGHT+2.25*UP)
        t_7.shift(2.25*RIGHT+3.5*UP)
        self.play(Write(t_4),Write(t_5))
        self.wait(0.5)
        self.play(Write(t_6),Write(t_7))
        self.wait(0.75)

        ab_1_a = MathTex("a",font_size=60)
        ab_1_b = MathTex("b",font_size=60)
        ab_1_a.shift(3.5*UP+0.75*LEFT)
        ab_1_b.shift(3.5*LEFT+2.25*UP)
        self.play(Indicate(t_5),Indicate(t_6),color=YELLOW,opacity=1,run_time=2)
        self.play(Write(ab_1_a),Write(ab_1_b))
        self.wait(0.5)
        ab_2_a = MathTex("a",font_size=60)
        ab_2_b = MathTex("b",font_size=60)
        ab_2_a.shift(0.75*DOWN+3.5*RIGHT)
        ab_2_b.shift(2.25*RIGHT+3.5*DOWN)
        self.play(Indicate(t_4),Indicate(t_7),color=YELLOW,opacity=1,run_time=2)
        self.play(Write(ab_2_a),Write(ab_2_b))
        self.wait(1)
        
        t_8 = MathTex("ab",font_size=60)
        t_9 = t_8.copy()
        t_8.shift(2.25*UP+0.75*LEFT)
        t_9.shift(0.75*DOWN+2.25*RIGHT)
        self.play(Write(t_8),Write(t_9))
        self.wait(0.5)

        whole = VGroup(huge_square,cut_line_1,cut_line_2,square_a2,square_b2,rect_ab_1,rect_ab_2,t_2,t_3,t_4,t_5,t_6,t_7,t_8,t_9,ab_1_a,ab_1_b,ab_2_a,ab_2_b)
        whole.generate_target()
        whole.target.shift(2*UP+4*LEFT)
        whole.target.scale(0.5)
        self.play(MoveToTarget(whole))
        self.wait(1)

        t_10 = MathTex("area",font_size=60)
        t_10.shift(2*DOWN+5*LEFT)
        t_11 = MathTex('=',font_size=60)
        t_12 = MathTex('+',font_size=60)
        t_13 = t_10.copy()
        t_14 = t_10.copy()
        t_15 = t_10.copy()
        t_16 = MathTex('+',font_size=60)
        self.play(Write(t_10))
        huge_square_copy = huge_square.copy()
        huge_square_copy.generate_target()
        huge_square_copy.target.scale(0.25).next_to(t_10,RIGHT)
        self.play(MoveToTarget(huge_square_copy))
        self.wait(0.5)
        t_11.next_to(huge_square_copy,RIGHT)
        self.play(Write(t_11))
        t_13.next_to(t_11,RIGHT)
        self.play(Write(t_13))
        square_a2_copy = square_a2.copy()
        square_a2_copy.generate_target()
        square_a2_copy.target.scale(0.25).next_to(t_13,RIGHT)
        self.play(MoveToTarget(square_a2_copy))
        self.wait(0.5)
        t_12.next_to(square_a2_copy,RIGHT)
        self.play(Write(t_12))
        t_14.next_to(t_12,RIGHT)
        self.play(Write(t_14))
        rect_ab_1_copy = rect_ab_1.copy()
        rect_ab_2_copy = rect_ab_2.copy()
        rect_ab_1_copy.generate_target()
        rect_ab_2_copy.generate_target()
        rect_ab_1_copy.target.rotate(90*DEGREES,OUT).scale(0.25).next_to(t_14,RIGHT)
        rect_ab_2_copy.target.scale(0.25).next_to(rect_ab_1_copy.target,RIGHT)
        self.play(MoveToTarget(rect_ab_1_copy),MoveToTarget(rect_ab_2_copy))
        self.wait(0.5)
        t_16.next_to(rect_ab_2_copy,RIGHT)
        self.play(Write(t_16))
        t_15.next_to(t_16,RIGHT)
        self.play(Write(t_15))
        square_b2_copy = square_b2.copy()
        square_b2_copy.generate_target()
        square_b2_copy.target.scale(0.35).next_to(t_15,RIGHT)
        self.play(MoveToTarget(square_b2_copy))
        self.wait(0.75)

        first_group = VGroup(t_10,huge_square_copy)
        second_group = VGroup(t_13,square_a2_copy)
        third_group = VGroup(t_14,rect_ab_1_copy,rect_ab_2_copy)
        fourth_group = VGroup(t_15,square_b2_copy)
        final_tex_1 = MathTex("(a+b)^{2}")
        final_tex_1.next_to(t_11,LEFT)
        final_tex_2 = MathTex("a^{2}")
        final_tex_2.next_to(t_11,RIGHT)
        final_tex_2.shift(0.07*UP)
        final_tex_3 = MathTex("2ab")
        final_tex_3.next_to(t_12,RIGHT)
        final_tex_4 = MathTex("b^{2}")
        final_tex_4.next_to(t_16,RIGHT)
        final_tex_4.shift(0.05*UP)
        self.play(Indicate(huge_square),scale_factor=1.1)
        self.play(ReplacementTransform(first_group,final_tex_1))
        self.wait(0.25)
        self.play(Indicate(square_a2),scale_factor=1.1)
        self.play(ReplacementTransform(second_group,final_tex_2))
        self.wait(0.25)
        self.play(Indicate(rect_ab_1),Indicate(rect_ab_2),scale_factor=1.1)
        self.play(ReplacementTransform(third_group,final_tex_3))
        self.wait(0.25)
        self.play(Indicate(square_b2),scale_factor=1.1)
        self.play(ReplacementTransform(fourth_group,final_tex_4))
        self.wait(0.5)

        small_group_1 = VGroup(t_12,final_tex_3)
        small_group_2 = VGroup(t_16,final_tex_4)
        small_group_1.generate_target()
        small_group_2.generate_target()
        small_group_1.target.next_to(final_tex_2,RIGHT)
        self.play(MoveToTarget(small_group_1))
        small_group_2.target.next_to(small_group_1,RIGHT)
        self.play(MoveToTarget(small_group_2))
        method = VGroup(final_tex_1,t_11,final_tex_2,small_group_1,small_group_2)
        method.generate_target()
        method.target.shift(2.25*UP,2*RIGHT)
        self.play(FadeOut(whole),MoveToTarget(method))
        self.wait(1)